{"version":3,"file":"index.js","sources":["../src/example_02/index.ts"],"sourcesContent":["/*\r\n * @description 实战TS编写发布订阅模式\r\n * @author haleLy 2023-08-23 11:38:37\r\n*/\r\ninterface EventFace {\r\n    on: (name: string, fn: Function) => void;\r\n    emit: (name: string, ...arg: Array<any>) => void;\r\n    off: (name: string, fn: Function) => void;\r\n    once: (name: string, fn: Function) => void;\r\n}\r\ninterface ListFn {\r\n    [key: string]: Array<Function>\r\n}\r\nclass DisPatch implements EventFace {\r\n    list: ListFn\r\n    constructor() {\r\n        this.list = {}\r\n    }\r\n    //订阅/监听\r\n    on(name: string, fn: Function) {\r\n        let callbackList = this.list[name] || [];\r\n        callbackList.push(fn)\r\n        this.list[name] = callbackList;\r\n    }\r\n    //发布/注册\r\n    emit(name: string, ...arg: Array<any>) {\r\n        let eventNames = this.list[name]\r\n        if (eventNames) {\r\n            eventNames.forEach(el => {\r\n                el.apply(this, arg)\r\n            })\r\n        } else {\r\n            console.error(`名称错误${name}`)\r\n        }\r\n    }\r\n    //解除绑定\r\n    off(name: string, fn: Function) {\r\n        let eventNames = this.list[name];\r\n        if (eventNames && fn) {\r\n            let index = eventNames.findIndex(fns => fns === fn)\r\n            eventNames.splice(index, 1)\r\n        } else {\r\n            console.error('该事件未监听');\r\n        }\r\n    }\r\n    //只执行一次\r\n    once(name: string, fn: Function) {\r\n        let decor = (...args: Array<any>) => {\r\n            fn.apply(this, args)\r\n            this.off(name, decor)\r\n        }\r\n        this.on(name, decor)\r\n    }\r\n\r\n}\r\n//创建实例\r\nconst o = new DisPatch();\r\n//注册订阅/监听\r\no.on('post', (...res) => {\r\n    console.log(1, res)\r\n})\r\nconst fn2 = (...res) => {\r\n    console.log(2, res)\r\n}\r\no.on('post', fn2)\r\no.once('post',(...res) => {\r\n    console.log(3, res)\r\n})\r\n//发布/注册\r\no.emit('post', 1, false, { name: 'hale' })\r\no.off('post', fn2)"],"names":["o","constructor","this","list","on","name","fn","callbackList","push","emit","arg","eventNames","forEach","el","apply","console","error","off","index","findIndex","fns","splice","once","decor","args","res","log","fn2"],"mappings":"+QAwDA,MAAMA,EAAI,IA3CV,MAEIC,cACIC,KAAKC,KAAO,EACf,CAEDC,GAAGC,EAAcC,GACb,IAAIC,EAAeL,KAAKC,KAAKE,IAAS,GACtCE,EAAaC,KAAKF,GAClBJ,KAAKC,KAAKE,GAAQE,CACrB,CAEDE,KAAKJ,KAAiBK,GAClB,IAAIC,EAAaT,KAAKC,KAAKE,GACvBM,EACAA,EAAWC,SAAQC,IACfA,EAAGC,MAAMZ,KAAMQ,EAAI,IAGvBK,QAAQC,MAAM,OAAOX,IAE5B,CAEDY,IAAIZ,EAAcC,GACd,IAAIK,EAAaT,KAAKC,KAAKE,GAC3B,GAAIM,GAAcL,EAAI,CAClB,IAAIY,EAAQP,EAAWQ,WAAUC,GAAOA,IAAQd,IAChDK,EAAWU,OAAOH,EAAO,EAC5B,MACGH,QAAQC,MAAM,SAErB,CAEDM,KAAKjB,EAAcC,GACf,IAAIiB,EAAQ,IAAIC,KACZlB,EAAGQ,MAAMZ,KAAMsB,GACftB,KAAKe,IAAIZ,EAAMkB,EAAM,EAEzBrB,KAAKE,GAAGC,EAAMkB,EACjB,GAMLvB,EAAEI,GAAG,QAAQ,IAAIqB,KACbV,QAAQW,IAAI,EAAGD,EAAI,IAEvB,MAAME,EAAM,IAAIF,KACZV,QAAQW,IAAI,EAAGD,EAAI,EAEvBzB,EAAEI,GAAG,OAAQuB,GACb3B,EAAEsB,KAAK,QAAO,IAAIG,KACdV,QAAQW,IAAI,EAAGD,EAAI,IAGvBzB,EAAES,KAAK,OAAQ,GAAG,EAAO,CAAEJ,KAAM,SACjCL,EAAEiB,IAAI,OAAQU"}